Parameters:
  PipelineName:
    Description: Pipeline name
    Type: String
  GitHubConnectionArn:
    Description: GitHub CodeStar Connection Arn created by pipeline-initial-resources
    Type: String
    Default: arn:aws:codestar-connections:sa-east-1:807339082933:connection/79dab327-acb5-4ad4-821c-7b63adf4dbee
  GitHubRepo:
    Description: Repository to be synced to this pipeline
    Type: String
  GitHubRepoBranch:
    Description: Repo branch to be synced to this pipeline
    Type: String
    AllowedValues:
    - develop
    - master
  TemplateFileName:
    Description: Template file name to be executed in DeployCFN Step
    Type: String
    Default: template.yml
  PipelineArtifactsBucketName:
    Description: Bucket onde sera armazenado os artefatos das pipelines
    Type: String
    Default: gft-gmatsud-pipeline-artifacts
  KMSKeyArn:
    Description: KMS Key ARN
    Type: String

Conditions:
  CondBranchDevelop: !Equals [ !Ref GitHubRepoBranch, develop ]
  CondBranchMaster: !Equals [ !Ref GitHubRepoBranch, master ]

Resources:
  CodeBuildCfnLintProject:
    Type: AWS::CodeBuild::Project
    Properties: 
      Name: !Sub "CfnLint-${PipelineName}-${GitHubRepoBranch}"
      ServiceRole: "{{resolve:ssm:/pipeline/CodeBuildRoleArn:1}}"
      Source:
        Type: NO_SOURCE
        BuildSpec: "version: 0.2\n\nphases:\n  pre_build:\n    commands:\n       - python --version\n       - pip install cfn-lint\n  build:\n    commands:\n       - ls\n       - cfn-lint *.yml\n"
        InsecureSsl: False
      Artifacts:
        Type: NO_ARTIFACTS
      Cache:
        Type: NO_CACHE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: True
      TimeoutInMinutes: 60
      QueuedTimeoutInMinutes: 480
      EncryptionKey: !Ref KMSKeyArn
      BadgeEnabled: False
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
        S3Logs:
          Status: DISABLED
          EncryptionDisabled: False

  CodeBuildUploadToS3:
    Type: AWS::CodeBuild::Project
    Properties: 
      Name: !Sub "UploadToS3-${PipelineName}-${GitHubRepoBranch}"
      ServiceRole: "{{resolve:ssm:/pipeline/CodeBuildRoleArn:1}}"
      Source:
        Type: NO_SOURCE
        BuildSpec: "version: 0.2\n\nphases:\n  pre_build:\n    commands:\n       - apt-get install jq\n      # - command\n  build:\n    commands:\n      - ls\n      - export MYBUCKET=$(jq -r .Parameters.BucketName parameters-$stage.json)\n      - echo $MYBUCKET\n      - aws s3 sync app/ s3://$MYBUCKET/ --acl public-read\n"
        InsecureSsl: False
      Artifacts:
        Type: NO_ARTIFACTS
      Cache:
        Type: NO_CACHE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: True
      TimeoutInMinutes: 60
      QueuedTimeoutInMinutes: 480
      EncryptionKey: !Ref KMSKeyArn
      BadgeEnabled: False
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
        S3Logs:
          Status: DISABLED
          EncryptionDisabled: False

  PipelineDevelop:
    Condition: CondBranchDevelop
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${PipelineName}-${GitHubRepoBranch}"
      ArtifactStore: 
        Type: S3
        Location: !Ref PipelineArtifactsBucketName
      RoleArn: "{{resolve:ssm:/pipeline/CodePipelineRoleArn:1}}"
      Stages: 
      - Name: Source
        Actions:
        - Name: Source
          ActionTypeId:
            Category: Source
            Owner: AWS
            Provider: CodeStarSourceConnection
            Version: '1'
          RunOrder: 1
          Configuration:
            BranchName: !Ref GitHubRepoBranch
            ConnectionArn: !Ref GitHubConnectionArn
            DetectChanges: True
            FullRepositoryId: !Ref GitHubRepo
            OutputArtifactFormat: CODE_ZIP
          OutputArtifacts:
            - Name: SourceArtifact
          Region: !Ref AWS::Region
          Namespace: SourceVariables
      - Name: CFN-Lint
        Actions:
        - Name: !Ref CodeBuildCfnLintProject
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: '1'
          RunOrder: 1
          Configuration:
            ProjectName: !Ref CodeBuildCfnLintProject
          OutputArtifacts:
            - Name: BuildArtifact
          InputArtifacts:
            - Name: SourceArtifact
          Region: !Ref AWS::Region
          Namespace: BuildVariables
      - Name: Deploy-Dev
        Actions:
        - Name: DeployCFN-Dev
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: '1'
          RunOrder: 1
          Configuration:
            ActionMode: CREATE_UPDATE
            Capabilities: CAPABILITY_NAMED_IAM
            RoleArn: "{{resolve:ssm:/pipeline/CloudFormationRoleArn:1}}"
            StackName: !Sub "stack-${PipelineName}-dev"
            TemplateConfiguration: "SourceArtifact::parameters-dev.json"
            TemplatePath: !Sub "SourceArtifact::${TemplateFileName}"
          InputArtifacts:
          - Name: SourceArtifact
          Region: !Ref AWS::Region
        - Name: UploadToS3Bucket-Dev
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: '1'
          RunOrder: 2
          Configuration:
            ProjectName: !Ref CodeBuildUploadToS3
            EnvironmentVariables: "[{\"name\":\"stage\",\"value\":\"dev\",\"type\":\"PLAINTEXT\"}]"
          InputArtifacts:
            - Name: SourceArtifact
          Region: !Ref AWS::Region
          Namespace: UploadToS3Bucket-Dev

  PipelineMaster:
    Condition: CondBranchMaster
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${PipelineName}-${GitHubRepoBranch}"
      ArtifactStore: 
        Type: S3
        Location: !Ref PipelineArtifactsBucketName
      RoleArn: "{{resolve:ssm:/pipeline/CodePipelineRoleArn:1}}"
      Stages: 
      - Name: Source
        Actions:
        - Name: Source
          ActionTypeId:
            Category: Source
            Owner: AWS
            Provider: CodeStarSourceConnection
            Version: '1'
          RunOrder: 1
          Configuration:
            BranchName: !Ref GitHubRepoBranch
            ConnectionArn: !Ref GitHubConnectionArn
            DetectChanges: True
            FullRepositoryId: !Ref GitHubRepo
            OutputArtifactFormat: CODE_ZIP
          OutputArtifacts:
            - Name: SourceArtifact
          Region: !Ref AWS::Region
          Namespace: SourceVariables
      - Name: CFN-Lint
        Actions:
        - Name: !Ref CodeBuildCfnLintProject
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: '1'
          RunOrder: 1
          Configuration:
            ProjectName: !Ref CodeBuildCfnLintProject
          OutputArtifacts:
            - Name: BuildArtifact
          InputArtifacts:
            - Name: SourceArtifact
          Region: !Ref AWS::Region
          Namespace: BuildVariables
      - Name: Deploy-Hml
        Actions:
        - Name: DeployCFN-Hml
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: '1'
          RunOrder: 1
          Configuration:
            ActionMode: CREATE_UPDATE
            Capabilities: CAPABILITY_NAMED_IAM
            RoleArn: "{{resolve:ssm:/pipeline/CloudFormationRoleArn:1}}"
            StackName: !Sub "stack-${PipelineName}-hml"
            TemplateConfiguration: "SourceArtifact::parameters-hml.json"
            TemplatePath: !Sub "SourceArtifact::${TemplateFileName}"
          InputArtifacts:
          - Name: SourceArtifact
          Region: !Ref AWS::Region
        - Name: UploadToS3Bucket-Hml
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: '1'
          RunOrder: 2
          Configuration:
            ProjectName: !Ref CodeBuildUploadToS3
            EnvironmentVariables: "[{\"name\":\"stage\",\"value\":\"hml\",\"type\":\"PLAINTEXT\"}]"
          InputArtifacts:
            - Name: SourceArtifact
          Region: !Ref AWS::Region
          Namespace: UploadToS3Bucket-Hml
      - Name: Deploy-Prd
        Actions:
        - Name: DeployCFN-Prd
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: '1'
          RunOrder: 1
          Configuration:
            ActionMode: CREATE_UPDATE
            Capabilities: CAPABILITY_NAMED_IAM
            RoleArn: "{{resolve:ssm:/pipeline/CloudFormationRoleArn:1}}"
            StackName: !Sub "stack-${PipelineName}-prd"
            TemplateConfiguration: "SourceArtifact::parameters-prd.json"
            TemplatePath: !Sub "SourceArtifact::${TemplateFileName}"
          InputArtifacts:
          - Name: SourceArtifact
          Region: !Ref AWS::Region
        - Name: UploadToS3Bucket-Prd
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: '1'
          RunOrder: 2
          Configuration:
            ProjectName: !Ref CodeBuildUploadToS3
            EnvironmentVariables: "[{\"name\":\"stage\",\"value\":\"prd\",\"type\":\"PLAINTEXT\"}]"
          InputArtifacts:
            - Name: SourceArtifact
          Region: !Ref AWS::Region
          Namespace: UploadToS3Bucket-Prd